name: Release script

on:
  push:
    tags:
      - "v*"

jobs:
  build_and_package:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
          # - os: ubuntu-latest
          - os: macos-latest # Intel-based macOS (default architecture)
          - os: macos-11 # macOS with M1 chip (ARM architecture)
            arch: arm64
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Cache TypeScript build
        uses: actions/cache@v3
        with:
          path: ./dist
          key: ${{ runner.os }}-tsc-${{ hashFiles('**/tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-tsc-

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Run Linux Specific Command
        if: matrix.os == 'ubuntu-latest'
        run: npx --no node-llama-cpp download

      - name: Set version as env
        run: echo "APP_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Rename artifacts for ARM architecture
        if: matrix.os == 'macos-11'
        run: |
          mv ./release/${{ env.APP_VERSION }}/*.dmg ./release/${{ env.APP_VERSION }}/${{ github.event.repository.name }}_${{ env.APP_VERSION }}-arm.dmg

      - name: Rename artifacts for Intel architecture
        if: matrix.os == 'macos-latest'
        run: |
          mv ./release/${{ env.APP_VERSION }}/*.dmg ./release/${{ env.APP_VERSION }}/${{ github.event.repository.name }}_${{ env.APP_VERSION }}-intel.dmg

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-app
          path: |
            ./release/*/*.exe
            ./release/${{ env.APP_VERSION }}/**/*.AppImage
            ./release/${{ env.APP_VERSION }}/*-arm.dmg
            ./release/${{ env.APP_VERSION }}/*-intel.dmg
  create_release:
    needs: build_and_package
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*.exe
            **/*.AppImage
            **/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
